#include <iostream>
#include <cmath>
//

//
using namespace std;

int teste(int l[],int n){
    int ord = 1;
    int k = l[0];
    for(int i = 1;i < n;i++){
        if(l[i] < k){
            ord = 0;
            k = l[i];
        }else{
            k = l[i];
        }
    }
    return ord;


}

void crescente(int l[],int n){
    int ord = 0;
    while(ord == 0){
        int k = l[0];
        ord = 1;
        for(int i = 1;i < n;i++){
            if(l[i] < k){
                k = l[i];
                ord = 0;
                l[i] = l[i-1];
                l[i-1] = k;

            }
            else{
                k = l[i];
            }
        }
    }

}


int main(){
    int n;
    scanf("%d",&n);
    int *l = new int[n];
    for(int i = 0;i < n;i++){
        scanf("%d",&l[i]);
    }
    if(teste(l,n) == 1){
        printf("0");
    }
    else{
        int p = 0;
        int *k = new int[n];
        for(int i =0;i< n;i++){
            k[i] = l[i];
        }
        crescente(l,n);
        for(int i = 0;i < n;i++){
            if(k[i] != l[i]){
                p++;
            }
        }
        int *r = new int[p];
        int m = 0;
        for(int i = 0;i < n;i++){
            if(k[i] != l[i]){
                r[m] = k[i];
                m++;
            }
        }
        printf("%d \n",p);
        crescente(r,p);
        for(int i = 0;i < p;i++){
            printf("%d ",r[i]);
        }
        delete[] r;
        r = NULL;
        delete[] k;
        k = NULL;
    }
    delete[] l;
    l = NULL;


return 0;

}
